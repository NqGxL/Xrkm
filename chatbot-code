<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>チャットボット</title>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@300;400;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #4a90e2;
            --secondary-color: #f5f5f5;
            --text-color: #333;
            --user-message-color: #e1ffc7;
            --ai-message-color: #e3f2fd;
            --shadow-color: rgba(0, 0, 0, 0.1);
        }

        body {
            font-family: 'Noto Sans JP', Arial, sans-serif;
            background-color: var(--secondary-color);
            color: var(--text-color);
            display: flex;
            flex-direction: column;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            padding: 20px;
            box-sizing: border-box;
        }

        h1 {
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 20px;
            color: var(--primary-color);
        }

        #chat-container {
            width: 100%;
            max-width: 600px;
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px var(--shadow-color);
            overflow: hidden;
        }

        #chat-history {
            display: flex;
            flex-direction: column;
            height: 500px;
            overflow-y: auto;
            padding: 20px;
        }

        .message-container {
            display: flex;
            flex-direction: column;
            margin-bottom: 15px;
            animation: fadeIn 0.3s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .user .message {
            background-color: var(--user-message-color);
            align-self: flex-end;
        }

        .ai .message {
            background-color: var(--ai-message-color);
            align-self: flex-start;
        }

        .message {
            max-width: 80%;
            padding: 10px 15px;
            border-radius: 18px;
            font-size: 14px;
            line-height: 1.4;
            box-shadow: 0 1px 2px var(--shadow-color);
        }

        #input-container {
            display: flex;
            padding: 10px;
            background-color: white;
            border-top: 1px solid var(--secondary-color);
        }

        #user-input {
            flex-grow: 1;
            padding: 10px 15px;
            border: none;
            border-radius: 20px;
            font-size: 14px;
            background-color: var(--secondary-color);
            transition: box-shadow 0.3s ease;
        }

        #user-input:focus {
            outline: none;
            box-shadow: 0 0 0 2px var(--primary-color);
        }

        button {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 10px 20px;
            margin-left: 10px;
            border-radius: 20px;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #3a7bc8;
        }

        .loader {
            border: 3px solid var(--secondary-color);
            border-top: 3px solid var(--primary-color);
            border-radius: 50%;
            width: 24px;
            height: 24px;
            animation: spin 1s linear infinite;
            align-self: center;
            margin: 10px 0;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 600px) {
            body {
                padding: 10px;
            }

            #chat-history {
                height: 400px;
            }

            .message {
                max-width: 90%;
            }
        }
    </style>
</head>
<body>
    <h1>チャットボット</h1>
    <div id="chat-container">
        <div id="chat-history"></div>
        <div id="input-container">
            <input type="text" id="user-input" placeholder="メッセージを入力してください" />
            <button onclick="chat()">送信</button>
        </div>
    </div>

    <script>
        async function sendRequest(userInput) {
            const response = await fetch(
https://q1t7fxuoa8.execute-api.ap-northeast-1.amazonaws.com/63-chatbot-api-prod/chatbot-takaobushi2
                {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ user_input: userInput }),
                }
            );

            const data = await response.json();
            const parsedData = JSON.parse(data.body);
            return parsedData.response;
        }

        async function chat() {
            const chatHistory = document.getElementById("chat-history");
            const userInput = document.getElementById("user-input").value;

            if (!userInput.trim()) return;

            // ユーザーのメッセージを表示
            appendMessage('user', userInput);

            // ローディングエフェクトを表示
            const loaderDiv = document.createElement("div");
            loaderDiv.className = "loader";
            chatHistory.appendChild(loaderDiv);

            // スクロールを一番下に移動
            chatHistory.scrollTop = chatHistory.scrollHeight;

            try {
                const response = await sendRequest(userInput);

                // ローディングエフェクトを削除
                loaderDiv.remove();

                // AIの返信を表示
                appendMessage('ai', response);

            } catch (error) {
                console.error('Error:', error);
                loaderDiv.remove();
                appendMessage('ai', 'エラーが発生しました。もう一度お試しください。');
            }

            // 入力欄をクリア
            document.getElementById("user-input").value = "";
        }

        function appendMessage(sender, text) {
            const chatHistory = document.getElementById("chat-history");
            const messageDiv = document.createElement("div");
            messageDiv.className = `message-container ${sender}`;
            messageDiv.innerHTML = `<div class="message">${sender === 'user' ? 'あなた: ' : ''}${text}</div>`;
            chatHistory.appendChild(messageDiv);

            // スクロールを一番下に移動
            chatHistory.scrollTop = chatHistory.scrollHeight;
        }

        // Enterキーで送信
        document.getElementById("user-input").addEventListener("keypress", function(event) {
            if (event.key === "Enter") {
                event.preventDefault();
                chat();
            }
        });
    </script>
</body>
</html>
